
<!-- C√¥ng t·∫Øc B·∫¨T/T·∫ÆT -->
<div style="border: 2px solid #ccc; border-radius: 12px; padding: 30px; margin-top: 30px; background-color: #f8f9fa;">
  <div class="form-check form-switch" style="display: flex; align-items: center; justify-content: center; font-size: 28px;">
    <input 
      type="checkbox" 
      name="toggle_<%= relay_index %>" 
      id="toggle-switch-<%= relay_index %>" 
      class="form-check-input" 
      data-chip-id="<%= chip_id %>" 
      data-relay-index="<%= relay_index %>" 
      style="width: 80px; height: 40px;" 
      <%= @device_info['relays'][relay_index]['switch_value'] == 1 ? 'checked' : '' %> 
    >
    <label class="form-check-label" for="toggle-switch-<%= relay_index %>" style="margin-left: 20px; font-weight: bold;">B·∫¨T / T·∫ÆT</label>
  </div>
</div>

<!-- Form K√çCH HO·∫†T theo th·ªùi gian -->
<div style="border: 2px solid #ccc; border-radius: 12px; padding: 30px; margin-top: 30px; background-color: #f8f9fa;">
  <%= form_tag('/api/devices/set_longlast', method: 'post', onsubmit: "return updateLonglast(this, #{relay_index})") do %>
    <%= hidden_field_tag :device_id, chip_id %>
    <%= hidden_field_tag :relay_index, relay_index %>
    <%= hidden_field_tag :longlast, "", id: "longlast-hidden-#{relay_index}" %>

    <div style="display: flex; flex-direction: column; gap: 20px; align-items: center;">
      
      <input 
        type="number" 
        id="longlast-input-<%= relay_index %>" 
        min="1" 
        class="form-control" 
        placeholder="Nh·∫≠p th·ªùi gian..." 
        style="font-size: 24px; padding: 15px; width: 80%; text-align: center;"
      >

      <select 
        id="longlast-unit-<%= relay_index %>" 
        class="form-select" 
        style="font-size: 24px; padding: 15px; width: 80%; text-align: center;"
      >
        <option value="seconds" selected>Gi√¢y</option>
        <option value="minutes" >Ph√∫t</option>
      </select>

      <%= submit_tag 'K√çCH HO·∫†T', class: 'btn btn-primary', style: 'font-size: 28px; padding: 15px 30px; border-radius: 10px;' %>

    </div>
  <% end %>
</div>

<!-- N√∫t m·ªü trang th·ªëng k√™ -->
<div class="text-end mt-4">
  <%= button_to "üìä Xem th·ªëng k√™",
      relay_statistics_path(chip_id: chip_id, relay_index: relay_index),
      method: :get,
      class: "btn btn-lg btn-info px-5 py-2",
      style: "font-size: 22px; border-radius: 10px;" %>
</div>

<!-- Form h·∫πn gi·ªù -->
<div style="border: 1px solid #ccc; border-radius: 12px; padding: 30px; margin-top: 20px; background-color: #f9f9f9;">
  <%= form_tag('/api/devices/add_reminder', method: 'post', onsubmit: "return updateDuration(this, #{relay_index})") do %>
    <%= hidden_field_tag :device_id, chip_id %>
    <%= hidden_field_tag :relay_index, relay_index %>

    <div class="form-group" style="margin-bottom: 20px;">
      <%= datetime_local_field_tag :start_time, Time.current.in_time_zone('Asia/Ho_Chi_Minh').strftime('%Y-%m-%dT%H:%M'), id: "reminder-start-time-#{relay_index}", class: 'form-control form-control-lg', style: 'font-size: 18px;' %>

    </div>

    <div class="form-group" style="margin-bottom: 20px; display: flex; align-items: center;">
      <div style="flex: 1; margin-right: 10px;">
        <input type="number" id="reminder-duration-input-<%= relay_index %>" min="1" class="form-control form-control-lg" placeholder="Nh·∫≠p th·ªùi gian" style="font-size: 18px;">
      </div>
      <div style="flex: 1;">
        <select id="reminder-duration-unit-<%= relay_index %>" class="form-select form-select-lg" style="font-size: 18px;">
          <option value="seconds">Gi√¢y</option>
          <option value="minutes" selected>Ph√∫t</option>
        </select>
      </div>
    </div>

    <%= hidden_field_tag :duration, nil, id: "reminder-duration-#{relay_index}" %>

    <div class="form-group" style="margin-bottom: 20px;">
      <%= select_tag :repeat_type, options_for_select([['Kh√¥ng l·∫∑p l·∫°i', 'none'], ['H·∫±ng ng√†y', 'daily'], ['H·∫±ng tu·∫ßn', 'weekly'], ['H·∫±ng th√°ng', 'monthly']], 'daily'), id: "reminder-repeat-type-#{relay_index}", class: 'form-select form-select-lg', style: 'font-size: 18px;' %>
    </div>

    <div style="text-align: right; margin-top: 30px;">
      <%= submit_tag 'H·∫πn gi·ªù', class: 'btn btn-success btn-lg', style: 'font-size: 18px; padding: 10px 20px;' %>
    </div>
  <% end %>
</div>

<!-- Danh s√°ch H·∫πn gi·ªù -->
<div class="reminders" id="reminders" style="border: 1px solid grey; border-radius: 10px; padding: 20px; margin-top: 20px;">
  <div style="display: flex; justify-content: space-between; align-items: center;">
    <h3>Danh s√°ch H·∫πn gi·ªù</h3>
    <div class="form-check form-switch large-toggle">
      <input 
        type="checkbox" 
        name="toggle_reminders_<%= relay_index %>"
        id="toggle-reminders-active-<%= relay_index %>" 
        class="form-check-input" 
        data-chip-id="<%= chip_id %>" 
        data-relay-index="<%= relay_index %>" 
        <%= @device_info['relays'][relay_index]['is_reminders_active'] ? 'checked' : '' %> 

      >
    </div>
  </div>

  <% filtered_reminders = @device.reminders.where(relay_index: relay_index).order(:start_time) %>
  <% if filtered_reminders.any? %>
    <div class="reminders-list-<%= relay_index %>" id="reminders-list-<%= relay_index %>">
      <table class="table">
        <thead>
          <tr>
            <th>Ng√†y v√† gi·ªù b·∫Øt ƒë·∫ßu</th>
            <th>Th·ªùi gian ho·∫°t ƒë·ªông</th>
            <th>Ki·ªÉu l·∫∑p l·∫°i</th>
            <th>Thao t√°c</th>
          </tr>
        </thead>
        <tbody>
          <% filtered_reminders.each do |reminder| %>
            <tr>
              <td><%= reminder.start_time.strftime('%d/%m/%Y %H:%M:%S') %></td>
              <td>
                <% duration_ms = reminder.duration.to_i %>
                <% hours = duration_ms / (1000 * 60 * 60) %>
                <% minutes = (duration_ms / (1000 * 60)) % 60 %>
                <% seconds = (duration_ms / 1000) % 60 %>
                <%= "#{hours} gi·ªù, #{minutes} ph√∫t, #{seconds} gi√¢y" %>
              </td>
              <td>
                <%= case reminder.repeat_type
                    when 'none' then 'Kh√¥ng l·∫∑p l·∫°i'
                    when 'daily' then 'H·∫±ng ng√†y'
                    when 'weekly' then 'H·∫±ng tu·∫ßn'
                    when 'monthly' then 'H·∫±ng th√°ng'
                    else 'Kh√¥ng x√°c ƒë·ªãnh'
                  end %>
              </td>
              <td>
                <%= form_tag('/api/devices/remove_reminder', method: :post) do %>
                  <%= hidden_field_tag :device_id, chip_id %>
                  <%= hidden_field_tag :relay_index, relay_index %>
                  <%= hidden_field_tag :start_time, reminder.start_time.iso8601 %>
                  <%= submit_tag 'X√≥a', class: 'btn btn-danger btn-sm' %>
                <% end %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  <% else %>
    <p>Kh√¥ng c√≥ h·∫πn gi·ªù n√†o ƒë∆∞·ª£c thi·∫øt l·∫≠p.</p>
  <% end %>
</div>

<!-- Scripts -->
<script>
function updateLonglast(form, relayIndex) {
  const inputField = document.getElementById(`longlast-input-${relayIndex}`);
  const unitField = document.getElementById(`longlast-unit-${relayIndex}`);
  const hiddenField = document.getElementById(`longlast-hidden-${relayIndex}`);

  if (inputField && unitField && hiddenField) {
    const rawValue = inputField.value.trim();
    if (!rawValue) {
      alert("Vui l√≤ng nh·∫≠p th·ªùi gian!");
      return false;
    }

    const value = parseInt(rawValue, 10);
    if (isNaN(value) || value <= 0) {
      alert("Th·ªùi gian ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!");
      return false;
    }

    const multiplier = unitField.value === 'minutes' ? 60 : 1;
    hiddenField.value = value * multiplier * 1000; 
    return true;
  }

  alert("L·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu, vui l√≤ng th·ª≠ l·∫°i.");
  return false;
}

function updateDuration(form, relayIndex) {
  const inputField = document.getElementById(`reminder-duration-input-${relayIndex}`);
  const unitField = document.getElementById(`reminder-duration-unit-${relayIndex}`);
  const hiddenField = document.getElementById(`reminder-duration-${relayIndex}`);

  if (inputField && unitField && hiddenField) {
    const rawValue = inputField.value.trim();
    if (!rawValue) {
      alert("Vui l√≤ng nh·∫≠p th·ªùi gian ho·∫°t ƒë·ªông!");
      return false;
    }

    const value = parseInt(rawValue, 10);
    if (isNaN(value) || value <= 0) {
      alert("Th·ªùi gian ph·∫£i l√† s·ªë nguy√™n d∆∞∆°ng!");
      return false;
    }

    const multiplier = unitField.value === 'minutes' ? 60 : 1;
    hiddenField.value = value * multiplier * 1000;
    return true;
  }

  alert("L·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu, vui l√≤ng th·ª≠ l·∫°i.");
  return false;
}
</script>
